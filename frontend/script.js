// âœ… FunciÃ³n para obtener mascotas con validaciones avanzadas
export async function fetchMascotas() {
    try {
        console.log("ðŸ”Ž Iniciando solicitud para obtener mascotas...");

        const response = await fetch("http://127.0.0.1:5000/api/mascotas", {
            method: "GET",
            headers: { "Accept": "application/json" },
            mode: "cors"
        });

        // âœ… Validar respuesta HTTP antes de procesar datos
        console.assert(response instanceof Response, "âš  La respuesta no es un objeto Response.");
        if (!response.ok) throw new Error(`Error ${response.status}: ${response.statusText}`);

        const mascotas = await response.json();

        // âœ… PostcondiciÃ³n: Verificar que los datos recibidos son correctos
        console.assert(Array.isArray(mascotas), "âš  La respuesta del backend no es una lista vÃ¡lida.");
        console.assert(mascotas.every(m => typeof m.nombre === "string"), "âš  Alguna mascota no tiene un nombre vÃ¡lido.");

        console.log("âœ… Mascotas obtenidas con Ã©xito:", mascotas);

        return mascotas;

    } catch (error) {
        console.error("âš  Error al obtener mascotas:", error);
        return [];
    }
}
